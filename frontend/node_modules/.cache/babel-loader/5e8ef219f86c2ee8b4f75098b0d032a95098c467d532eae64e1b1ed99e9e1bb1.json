{"ast":null,"code":"// Dashboard.js\nimport React,{useState,useEffect}from'react';import{useNavigate}from'react-router-dom';import SkillForm from'../components/SkillForm';import UserList from'../components/UserList';import api from'../utils/api';import{jsxs as _jsxs,jsx as _jsx}from\"react/jsx-runtime\";const Dashboard=()=>{const[isLoggedIn,setIsLoggedIn]=useState(false);const[currentUserId,setCurrentUserId]=useState(null);const[userName,setUserName]=useState('');const[userSkills,setUserSkills]=useState([]);const navigate=useNavigate();useEffect(()=>{const token=localStorage.getItem('token');if(token){setIsLoggedIn(true);fetchUserInfo(token);}else{navigate('/login');}},[navigate]);const fetchUserInfo=async token=>{try{const config={headers:{'x-auth-token':token}};const response=await api.get('/auth/user',config);setCurrentUserId(response.data._id);setUserName(response.data.name);fetchUserSkills(response.data._id);}catch(error){console.error('Error fetching user info:',error);}};const fetchUserSkills=async userId=>{try{const response=await api.get(\"/skills/\".concat(userId));setUserSkills(response.data.skills);}catch(error){console.error('Error fetching user skills:',error);}};const handleUserSelect=userId=>{setCurrentUserId(userId);fetchUserSkills(userId);};return/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsxs(\"h1\",{className:\"flex justify-center text-xl\",children:[\"Welcome to the Dashboard, \",userName]}),/*#__PURE__*/_jsx(UserList,{onUserSelect:handleUserSelect})]});};export default Dashboard;","map":{"version":3,"names":["React","useState","useEffect","useNavigate","SkillForm","UserList","api","jsxs","_jsxs","jsx","_jsx","Dashboard","isLoggedIn","setIsLoggedIn","currentUserId","setCurrentUserId","userName","setUserName","userSkills","setUserSkills","navigate","token","localStorage","getItem","fetchUserInfo","config","headers","response","get","data","_id","name","fetchUserSkills","error","console","userId","concat","skills","handleUserSelect","children","className","onUserSelect"],"sources":["C:/Users/KRISHNA KUMAR/Documents/Skill-App/frontend/src/pages/Dashboard.js"],"sourcesContent":["// Dashboard.js\r\nimport React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport SkillForm from '../components/SkillForm';\r\nimport UserList from '../components/UserList';\r\nimport api from '../utils/api';\r\n\r\nconst Dashboard = () => {\r\n  const [isLoggedIn, setIsLoggedIn] = useState(false);\r\n  const [currentUserId, setCurrentUserId] = useState(null);\r\n  const [userName, setUserName] = useState('');\r\n  const [userSkills, setUserSkills] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      setIsLoggedIn(true);\r\n      fetchUserInfo(token);\r\n    } else {\r\n      navigate('/login');\r\n    }\r\n  }, [navigate]);\r\n\r\n  const fetchUserInfo = async (token) => {\r\n    try {\r\n      const config = {\r\n        headers: {\r\n          'x-auth-token': token\r\n        }\r\n      };\r\n      const response = await api.get('/auth/user', config);\r\n      setCurrentUserId(response.data._id);\r\n      setUserName(response.data.name);\r\n      fetchUserSkills(response.data._id);\r\n    } catch (error) {\r\n      console.error('Error fetching user info:', error);\r\n    }\r\n  };\r\n\r\n  const fetchUserSkills = async (userId) => {\r\n    try {\r\n      const response = await api.get(`/skills/${userId}`);\r\n      setUserSkills(response.data.skills);\r\n    } catch (error) {\r\n      console.error('Error fetching user skills:', error);\r\n    }\r\n  };\r\n\r\n  const handleUserSelect = (userId) => {\r\n    setCurrentUserId(userId);\r\n    fetchUserSkills(userId);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <h1 className='flex justify-center text-xl'>Welcome to the Dashboard, {userName}</h1>\r\n      <UserList onUserSelect={handleUserSelect} />\r\n      \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Dashboard;\r\n"],"mappings":"AAAA;AACA,MAAO,CAAAA,KAAK,EAAIC,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAClD,OAASC,WAAW,KAAQ,kBAAkB,CAC9C,MAAO,CAAAC,SAAS,KAAM,yBAAyB,CAC/C,MAAO,CAAAC,QAAQ,KAAM,wBAAwB,CAC7C,MAAO,CAAAC,GAAG,KAAM,cAAc,CAAC,OAAAC,IAAA,IAAAC,KAAA,CAAAC,GAAA,IAAAC,IAAA,yBAE/B,KAAM,CAAAC,SAAS,CAAGA,CAAA,GAAM,CACtB,KAAM,CAACC,UAAU,CAAEC,aAAa,CAAC,CAAGZ,QAAQ,CAAC,KAAK,CAAC,CACnD,KAAM,CAACa,aAAa,CAAEC,gBAAgB,CAAC,CAAGd,QAAQ,CAAC,IAAI,CAAC,CACxD,KAAM,CAACe,QAAQ,CAAEC,WAAW,CAAC,CAAGhB,QAAQ,CAAC,EAAE,CAAC,CAC5C,KAAM,CAACiB,UAAU,CAAEC,aAAa,CAAC,CAAGlB,QAAQ,CAAC,EAAE,CAAC,CAChD,KAAM,CAAAmB,QAAQ,CAAGjB,WAAW,CAAC,CAAC,CAE9BD,SAAS,CAAC,IAAM,CACd,KAAM,CAAAmB,KAAK,CAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC,CAC3C,GAAIF,KAAK,CAAE,CACTR,aAAa,CAAC,IAAI,CAAC,CACnBW,aAAa,CAACH,KAAK,CAAC,CACtB,CAAC,IAAM,CACLD,QAAQ,CAAC,QAAQ,CAAC,CACpB,CACF,CAAC,CAAE,CAACA,QAAQ,CAAC,CAAC,CAEd,KAAM,CAAAI,aAAa,CAAG,KAAO,CAAAH,KAAK,EAAK,CACrC,GAAI,CACF,KAAM,CAAAI,MAAM,CAAG,CACbC,OAAO,CAAE,CACP,cAAc,CAAEL,KAClB,CACF,CAAC,CACD,KAAM,CAAAM,QAAQ,CAAG,KAAM,CAAArB,GAAG,CAACsB,GAAG,CAAC,YAAY,CAAEH,MAAM,CAAC,CACpDV,gBAAgB,CAACY,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC,CACnCb,WAAW,CAACU,QAAQ,CAACE,IAAI,CAACE,IAAI,CAAC,CAC/BC,eAAe,CAACL,QAAQ,CAACE,IAAI,CAACC,GAAG,CAAC,CACpC,CAAE,MAAOG,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,CAAEA,KAAK,CAAC,CACnD,CACF,CAAC,CAED,KAAM,CAAAD,eAAe,CAAG,KAAO,CAAAG,MAAM,EAAK,CACxC,GAAI,CACF,KAAM,CAAAR,QAAQ,CAAG,KAAM,CAAArB,GAAG,CAACsB,GAAG,YAAAQ,MAAA,CAAYD,MAAM,CAAE,CAAC,CACnDhB,aAAa,CAACQ,QAAQ,CAACE,IAAI,CAACQ,MAAM,CAAC,CACrC,CAAE,MAAOJ,KAAK,CAAE,CACdC,OAAO,CAACD,KAAK,CAAC,6BAA6B,CAAEA,KAAK,CAAC,CACrD,CACF,CAAC,CAED,KAAM,CAAAK,gBAAgB,CAAIH,MAAM,EAAK,CACnCpB,gBAAgB,CAACoB,MAAM,CAAC,CACxBH,eAAe,CAACG,MAAM,CAAC,CACzB,CAAC,CAED,mBACE3B,KAAA,QAAA+B,QAAA,eACE/B,KAAA,OAAIgC,SAAS,CAAC,6BAA6B,CAAAD,QAAA,EAAC,4BAA0B,CAACvB,QAAQ,EAAK,CAAC,cACrFN,IAAA,CAACL,QAAQ,EAACoC,YAAY,CAAEH,gBAAiB,CAAE,CAAC,EAEzC,CAAC,CAEV,CAAC,CAED,cAAe,CAAA3B,SAAS","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}